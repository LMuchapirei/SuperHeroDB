@using SuperHeroDB.Shared
@inject ISuperHeroService SuperHeroService
@inject IJSRuntime JsRuntime
@if (Hero.Id == 0 )
{
    <h3>Create a new Superhero</h3>
}
else
{
    
<h3>Edit @Hero.HeroName</h3>
}
<div>
    <EditForm Model="Hero" OnSubmit="HandleSubmit">
        <div class="form-group">
            <label>First Name</label>
            <InputText @bind-Value="@Hero.FirstName" class="form-control"></InputText>
        </div> 
        <div class="form-group">
            <label>Last Name</label>
            <InputText @bind-Value="@Hero.LastName" class="form-control"></InputText>
        </div>
        <div>
            <label>Hero Name</label>
            <InputText @bind-Value="@Hero.HeroName" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Comic</label><br/>
            <InputRadioGroup @bind-Value="comicId" class="form-control">
                @foreach (var comic in SuperHeroService.Comics)
                {
                    <InputRadio Value="comic.Id"/>
                    <span style="padding-left: 5px">@comic.Name</span>
                }
            </InputRadioGroup>
        </div>
        <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
</div>
@code {
    // [Parameter]
    // public SuperHeroDB.Shared.SuperHero HeroToEdit { get; set; }
    [Parameter]
    public SuperHeroDB.Shared.SuperHero Hero { get; set; } = new();
    int comicId = 1; 
    protected override async Task OnParametersSetAsync()
    {
        await SuperHeroService.GetComics();
        Hero.Comic = null;
        comicId = Hero.ComicId;
    }
    async Task HandleSubmit()
    {

        Hero.Comic = null;
        Hero.ComicId = comicId;
            // SuperHeroService.Comics.FirstOrDefault(c => c.Id == comicId);
        await JsRuntime.InvokeVoidAsync("console.log", Hero);
        if (Hero.Id == 0)
        {
            Console.WriteLine("CREATE");
        await SuperHeroService.CreateSuperHero(Hero);
        }
        else
        {
            await SuperHeroService.UpdateSuperHero(Hero.Id, Hero);
        }
        
    }
}